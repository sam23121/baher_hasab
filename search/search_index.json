{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Baher Hasab (\u1263\u1205\u1228 \u1203\u1233\u1265) \ud83c\uddea\ud83c\uddf9 Overview Ethiopia has its own ancient calendar based on the system called Baher Hasab - \u1263\u1215\u1228 \u1203\u1233\u1265 which means the Sea of Ideas. Baher Hasab also known as Abushakir is a chronological system used for calculating the times of festivals and the beginning and ending of the fasting days throughout the year. The baher_hasab is a Python package that simplifies the process of working with the Baher Hasab (also known as Abushakir) calendar. This package provides a set of tools and functions to help users easily calculate the dates of festivals and the beginning and ending of fasting days throughout the year. Links Documentation Github PyPI Issues Extra Information Key Features Calendar Conversion : Easily convert between the Gregorian calendar and the Ethiopian calendar. Festival Calculations : Automatically determine the dates of major festivals and holidays based on the Baher Hasab calculations. Fasting Day Tracking : Effortlessly track the start and end dates of fasting periods throughout the year. Installation To install the package, you can use pip : pip install baher_hasab Usage Here's a simple example of how to use the package: from baher_hasab import BaherHasab # Create a Bahire Hasab instance bh = BaherHasab(given_year=2016) # Get the date of a specific festival event_date = bh.get_event_date('hudade') print(event_date) # Outputs Megabit 2 Contribution Contributions to the baher_hasab package are welcome! If you encounter any issues or have suggestions for new features, please feel free to open an issue or submit a pull request on the GitHub repository. Note Defining some terms to get started: - Baher Hasab : Also known as Abushakir, is a chronological system used for calculating the times of festivals and the beginning and ending of the fasting days throughout the year. - neneweh (\u1290\u1290\u12cc): is the Ethiopian name for The three day fast that the neneweh people did (Book of Jonah) - Hudade (\u1201\u12f3\u12f4): also known as abiy_tsome (\u12a0\u1265\u12ed \u133e\u121d) is the Ethiopian name for the Great Lent. - debrezeit (\u12f0\u1265\u1228\u12d8\u12ed\u1275): is the Ethiopian name for the middle day of the Great lent. - hosana (\u1206\u1233\u12d5\u1293): is the Ethiopian name for the day of Entrance of Jesus to Jerusalem. - seklet (\u1235\u1245\u1208\u1275): is the Ethiopian name for the holy Friday. - tensae (\u1275\u1295\u1233\u12a4): is the Ethiopian name for the Easter. - rekeb_kanat (\u122d\u12ad\u1260 \u12ab\u1205\u1293\u1275): is the Ethiopian name for the \"Coming together of the priests\". - erget (\u12d5\u122d\u1308\u1275): is the Ethiopian name for the day of ascension of Jesus Christ. - piraklitos (\u1330\u122b\u1245\u120a\u1326\u1235): is the Ethiopian name for the Pentecost. - hawaryat (\u1210\u12cb\u122d\u12eb\u1275): is the Ethiopian name for the fast of the apostles. - dehenet (\u12f5\u1205\u1295\u1290\u1275 ): is the Ethiopian name for the starting day of wenesday and friday fasting. - wengelawyan (\u12c8\u1295\u130c\u120b\u12cd\u12eb\u1295): is the Ethiopian name for the gospel of the year. - awde_kemer (\u12a0\u12cd\u12f0 \u1240\u1218\u122d): its a cycle that comes every 532 years. - awde_mahtot (\u12a0\u12cd\u12f0 \u121b\u1215\u1276\u1275): its a cycle that comes every 76 years. - awde_tsehay (\u12a0\u12cd\u12f0 \u1218\u1235\u12a8\u122d): its a cycle that comes every 28 years.","title":"About"},{"location":"#baher-hasab","text":"","title":"Baher Hasab (\u1263\u1205\u1228 \u1203\u1233\u1265) \ud83c\uddea\ud83c\uddf9"},{"location":"#overview","text":"Ethiopia has its own ancient calendar based on the system called Baher Hasab - \u1263\u1215\u1228 \u1203\u1233\u1265 which means the Sea of Ideas. Baher Hasab also known as Abushakir is a chronological system used for calculating the times of festivals and the beginning and ending of the fasting days throughout the year. The baher_hasab is a Python package that simplifies the process of working with the Baher Hasab (also known as Abushakir) calendar. This package provides a set of tools and functions to help users easily calculate the dates of festivals and the beginning and ending of fasting days throughout the year.","title":"Overview"},{"location":"#links","text":"Documentation Github PyPI Issues Extra Information","title":"Links"},{"location":"#key-features","text":"Calendar Conversion : Easily convert between the Gregorian calendar and the Ethiopian calendar. Festival Calculations : Automatically determine the dates of major festivals and holidays based on the Baher Hasab calculations. Fasting Day Tracking : Effortlessly track the start and end dates of fasting periods throughout the year.","title":"Key Features"},{"location":"#installation","text":"To install the package, you can use pip : pip install baher_hasab","title":"Installation"},{"location":"#usage","text":"Here's a simple example of how to use the package: from baher_hasab import BaherHasab # Create a Bahire Hasab instance bh = BaherHasab(given_year=2016) # Get the date of a specific festival event_date = bh.get_event_date('hudade') print(event_date) # Outputs Megabit 2","title":"Usage"},{"location":"#contribution","text":"Contributions to the baher_hasab package are welcome! If you encounter any issues or have suggestions for new features, please feel free to open an issue or submit a pull request on the GitHub repository.","title":"Contribution"},{"location":"#note","text":"Defining some terms to get started: - Baher Hasab : Also known as Abushakir, is a chronological system used for calculating the times of festivals and the beginning and ending of the fasting days throughout the year. - neneweh (\u1290\u1290\u12cc): is the Ethiopian name for The three day fast that the neneweh people did (Book of Jonah) - Hudade (\u1201\u12f3\u12f4): also known as abiy_tsome (\u12a0\u1265\u12ed \u133e\u121d) is the Ethiopian name for the Great Lent. - debrezeit (\u12f0\u1265\u1228\u12d8\u12ed\u1275): is the Ethiopian name for the middle day of the Great lent. - hosana (\u1206\u1233\u12d5\u1293): is the Ethiopian name for the day of Entrance of Jesus to Jerusalem. - seklet (\u1235\u1245\u1208\u1275): is the Ethiopian name for the holy Friday. - tensae (\u1275\u1295\u1233\u12a4): is the Ethiopian name for the Easter. - rekeb_kanat (\u122d\u12ad\u1260 \u12ab\u1205\u1293\u1275): is the Ethiopian name for the \"Coming together of the priests\". - erget (\u12d5\u122d\u1308\u1275): is the Ethiopian name for the day of ascension of Jesus Christ. - piraklitos (\u1330\u122b\u1245\u120a\u1326\u1235): is the Ethiopian name for the Pentecost. - hawaryat (\u1210\u12cb\u122d\u12eb\u1275): is the Ethiopian name for the fast of the apostles. - dehenet (\u12f5\u1205\u1295\u1290\u1275 ): is the Ethiopian name for the starting day of wenesday and friday fasting. - wengelawyan (\u12c8\u1295\u130c\u120b\u12cd\u12eb\u1295): is the Ethiopian name for the gospel of the year. - awde_kemer (\u12a0\u12cd\u12f0 \u1240\u1218\u122d): its a cycle that comes every 532 years. - awde_mahtot (\u12a0\u12cd\u12f0 \u121b\u1215\u1276\u1275): its a cycle that comes every 76 years. - awde_tsehay (\u12a0\u12cd\u12f0 \u1218\u1235\u12a8\u122d): its a cycle that comes every 28 years.","title":"Note"},{"location":"baherhasab/","text":"BaherHasab Class The BaherHasab class is used to perform calculations related to the Ethiopian calendar, specifically for calculating the total years since the creation of the world, the Wember value, and the Abketa value. Initialization __init__(self, given_year: int = 2016) -> None Initializes the BaherHasab class with the given current year. Args: given_year (int): The current year in the Ethiopian calendar (7 or 8 years less than the Gregorian calendar depending on the season of the year). Example: baher_hasab = BaherHasab(given_year=2016) Baher haseb Methods get_total_years(self) -> int Calculates the total years since the creation of the world according to the Ethiopian calendar. Returns: int: The total number of years. Example: total_years = baher_hasab.get_total_years() print(total_years) # Outputs 7516 get_wember(self) -> int Calculates the Wember value for the current year. (We subtract one because the year has started, not finished). Returns: int: The Wember value. Example: wember = baher_hasab.get_wember() print(wember) # Outputs '6' get_abketa(self) -> int Calculates the Abketa value based on the Wember value. Returns: int: The Abketa value. Example: abketa = baher_hasab.get_abketa() print(abketa) # Outputs '13' get_metke(self) -> int Calculates the Metke value based on the Abketa value. Returns: int: The Metke value. Example: metke = baher_hasab.get_metke() print(metke) # Outputs the Metke value 17 get_first_day_of_year(self) -> str Calculates the first day of the year according to the Ethiopian calendar. Returns: str: The first day of the year Example: first_day = baher_hasab.get_first_day_of_year() print(first_day) # Outputs 'Wednesday' get_nenewe(self) -> Tuple[int, int] Calculates the nenewe date and Metke month based on the Metke value. Returns: int: The Day of the Nenewe Fast of the year int: The Month of the mekte (0 if it is the first month, 30 if it is the second month) Example: date, metke_month = baher_hasab.get_nenewe() print(date, metke_month) # Outputs 9 30 get_event_date(self, event_name: str) -> str Calculates the date of an event based on the nenewe date and the length to the event. Args: str: event of the year. it has to be from the following ones - hudade - debrezeit - hosana - seklet - tensae - rekeb_kanat - erget - piraklitos - hawaryat - dehenet Returns: str: The Date of the Event Example: date = baher_hasab.get_event_date('hudade') print(date) # Outputs Tir 30 get_wengelawyan(self) -> str Get the gospel of the year Returns: str: The Gospel of the year. It has to be one of - Matthew - Luke - Mark - John Example: gospel = baher_hasab.get_wengelawyan() print(gospel) # Outputs John get_awde_kemer(self) -> Tuple[int, int, int]: Gets the awde kemer of the year. In other other words on which year we are in the 532 cycle Returns: int: the ith awde kemer we are at (based on the given year) int: the past years in the awde kemer int: the years left for the awde kemer to finish Example: ith_awde_kemer, past_years, left_years = baher_hasab.get_awde_kemer() print(ith_awde_kemer, past_years, left_years) # Outputs 14, 332, 200 get_awde_mahtot(self) -> Tuple[int, int, int]: Gets the Awde Mahtot of the year. In other other words on which year we are in the 76 cycle Returns: int: the ith awde mahtot we are at (based on the given year) int: the past years in the awde mahtot int: the years left for the awde mahtot to finish Example: ith_awde_mahtot, past_years, left_years = baher_hasab.get_awde_mahtot() print(ith_awde_mahtot, past_years, left_years) # Outputs 30, 40, 36 get_awde_tsehay(self) -> Tuple[int, int, int]: Gets the awde tsehay of the year. In other other words on which year we are in the 28 cycle Returns: int: the ith awde tsehay we are at (based on the given year) int: the past years in the awde tsehay int: the years left for the awde tsehay to finish Example: ith_awde_tsehay, past_years, left_years = baher_hasab.get_awde_tsehay() print(ith_awde_tsehay, past_years, left_years) # Outputs 140, 18, 10 Calendar Converter Methods ethiopian_to_gregorian(ethiopian_year: int, ethiopian_month: int, ethiopian_day: int) -> tuple[int, int, int]: Convert an Ethiopian date to a Gregorian date. Args: ethiopian_year (int): The Ethiopian year. ethiopian_month (int): The Ethiopian month. ethiopian_day (int): The Ethiopian day. Returns: Tuple[int, int, int]: The Gregorian year, month, and day. Example: gregorian_year, gregorian_month, gregorian_day = baher_hasab.ethiopian_to_gregorian(2016, 11, 18) print(gregorian_year, gregorian_month, gregorian_day) # Outputs 2024, 7, 25 gregorian_to_ethiopian(gregorian_year: int, gregorian_month: int, gregorian_day: int) -> tuple[int, int, int]: Convert a Gregorian date to an Ethiopian date. Args: gregorian_year (int): The Gregorian year. gregorian_month (int): The Gregorian month. gregorian_day (int): The Gregorian day. Returns: Tuple[int, int, int]: The Ethiopian year, month, and day. Example: ethiopian_year, ethiopian_month, ethiopian_day = baher_hasab.gregorian_to_ethiopian(2024, 7, 25) print(ethiopian_year, ethiopian_month, ethiopian_day) # Outputs 2016, 11, 18 Attributes abiy_kemer Value: 532 Description: Also known as abiy awde. awde_mahtot Value: 76 Description: Also known as mahkelawi awde. awde_tsehay Value: 28 Description: Also known as nuhase awde. awde_abketa Value: 19 old_abketa Value: 11 amet_alem Value: 5500 Description: Years before Christ given_year Value: The given year passed during initialization.","title":"BaherHasab"},{"location":"baherhasab/#baherhasab-class","text":"The BaherHasab class is used to perform calculations related to the Ethiopian calendar, specifically for calculating the total years since the creation of the world, the Wember value, and the Abketa value.","title":"BaherHasab Class"},{"location":"baherhasab/#initialization","text":"","title":"Initialization"},{"location":"baherhasab/#__init__self-given_year-int-2016-none","text":"Initializes the BaherHasab class with the given current year.","title":"__init__(self, given_year: int = 2016) -&gt; None"},{"location":"baherhasab/#args","text":"given_year (int): The current year in the Ethiopian calendar (7 or 8 years less than the Gregorian calendar depending on the season of the year).","title":"Args:"},{"location":"baherhasab/#example","text":"baher_hasab = BaherHasab(given_year=2016)","title":"Example:"},{"location":"baherhasab/#baher-haseb-methods","text":"","title":"Baher haseb Methods"},{"location":"baherhasab/#get_total_yearsself-int","text":"Calculates the total years since the creation of the world according to the Ethiopian calendar.","title":"get_total_years(self) -&gt; int"},{"location":"baherhasab/#returns","text":"int: The total number of years.","title":"Returns:"},{"location":"baherhasab/#example_1","text":"total_years = baher_hasab.get_total_years() print(total_years) # Outputs 7516","title":"Example:"},{"location":"baherhasab/#get_wemberself-int","text":"Calculates the Wember value for the current year. (We subtract one because the year has started, not finished).","title":"get_wember(self) -&gt; int"},{"location":"baherhasab/#returns_1","text":"int: The Wember value.","title":"Returns:"},{"location":"baherhasab/#example_2","text":"wember = baher_hasab.get_wember() print(wember) # Outputs '6'","title":"Example:"},{"location":"baherhasab/#get_abketaself-int","text":"Calculates the Abketa value based on the Wember value.","title":"get_abketa(self) -&gt; int"},{"location":"baherhasab/#returns_2","text":"int: The Abketa value.","title":"Returns:"},{"location":"baherhasab/#example_3","text":"abketa = baher_hasab.get_abketa() print(abketa) # Outputs '13'","title":"Example:"},{"location":"baherhasab/#get_metkeself-int","text":"Calculates the Metke value based on the Abketa value.","title":"get_metke(self) -&gt; int"},{"location":"baherhasab/#returns_3","text":"int: The Metke value.","title":"Returns:"},{"location":"baherhasab/#example_4","text":"metke = baher_hasab.get_metke() print(metke) # Outputs the Metke value 17","title":"Example:"},{"location":"baherhasab/#get_first_day_of_yearself-str","text":"Calculates the first day of the year according to the Ethiopian calendar.","title":"get_first_day_of_year(self) -&gt; str"},{"location":"baherhasab/#returns_4","text":"str: The first day of the year","title":"Returns:"},{"location":"baherhasab/#example_5","text":"first_day = baher_hasab.get_first_day_of_year() print(first_day) # Outputs 'Wednesday'","title":"Example:"},{"location":"baherhasab/#get_neneweself-tupleint-int","text":"Calculates the nenewe date and Metke month based on the Metke value.","title":"get_nenewe(self) -&gt; Tuple[int, int]"},{"location":"baherhasab/#returns_5","text":"int: The Day of the Nenewe Fast of the year int: The Month of the mekte (0 if it is the first month, 30 if it is the second month)","title":"Returns:"},{"location":"baherhasab/#example_6","text":"date, metke_month = baher_hasab.get_nenewe() print(date, metke_month) # Outputs 9 30","title":"Example:"},{"location":"baherhasab/#get_event_dateself-event_name-str-str","text":"Calculates the date of an event based on the nenewe date and the length to the event.","title":"get_event_date(self, event_name: str) -&gt; str"},{"location":"baherhasab/#args_1","text":"str: event of the year. it has to be from the following ones - hudade - debrezeit - hosana - seklet - tensae - rekeb_kanat - erget - piraklitos - hawaryat - dehenet","title":"Args:"},{"location":"baherhasab/#returns_6","text":"str: The Date of the Event","title":"Returns:"},{"location":"baherhasab/#example_7","text":"date = baher_hasab.get_event_date('hudade') print(date) # Outputs Tir 30","title":"Example:"},{"location":"baherhasab/#get_wengelawyanself-str","text":"Get the gospel of the year","title":"get_wengelawyan(self) -&gt; str"},{"location":"baherhasab/#returns_7","text":"str: The Gospel of the year. It has to be one of - Matthew - Luke - Mark - John","title":"Returns:"},{"location":"baherhasab/#example_8","text":"gospel = baher_hasab.get_wengelawyan() print(gospel) # Outputs John","title":"Example:"},{"location":"baherhasab/#get_awde_kemerself-tupleint-int-int","text":"Gets the awde kemer of the year. In other other words on which year we are in the 532 cycle","title":"get_awde_kemer(self) -&gt; Tuple[int, int, int]:"},{"location":"baherhasab/#returns_8","text":"int: the ith awde kemer we are at (based on the given year) int: the past years in the awde kemer int: the years left for the awde kemer to finish","title":"Returns:"},{"location":"baherhasab/#example_9","text":"ith_awde_kemer, past_years, left_years = baher_hasab.get_awde_kemer() print(ith_awde_kemer, past_years, left_years) # Outputs 14, 332, 200","title":"Example:"},{"location":"baherhasab/#get_awde_mahtotself-tupleint-int-int","text":"Gets the Awde Mahtot of the year. In other other words on which year we are in the 76 cycle","title":"get_awde_mahtot(self) -&gt; Tuple[int, int, int]:"},{"location":"baherhasab/#returns_9","text":"int: the ith awde mahtot we are at (based on the given year) int: the past years in the awde mahtot int: the years left for the awde mahtot to finish","title":"Returns:"},{"location":"baherhasab/#example_10","text":"ith_awde_mahtot, past_years, left_years = baher_hasab.get_awde_mahtot() print(ith_awde_mahtot, past_years, left_years) # Outputs 30, 40, 36","title":"Example:"},{"location":"baherhasab/#get_awde_tsehayself-tupleint-int-int","text":"Gets the awde tsehay of the year. In other other words on which year we are in the 28 cycle","title":"get_awde_tsehay(self) -&gt; Tuple[int, int, int]:"},{"location":"baherhasab/#returns_10","text":"int: the ith awde tsehay we are at (based on the given year) int: the past years in the awde tsehay int: the years left for the awde tsehay to finish","title":"Returns:"},{"location":"baherhasab/#example_11","text":"ith_awde_tsehay, past_years, left_years = baher_hasab.get_awde_tsehay() print(ith_awde_tsehay, past_years, left_years) # Outputs 140, 18, 10","title":"Example:"},{"location":"baherhasab/#calendar-converter-methods","text":"","title":"Calendar Converter Methods"},{"location":"baherhasab/#ethiopian_to_gregorianethiopian_year-int-ethiopian_month-int-ethiopian_day-int-tupleint-int-int","text":"Convert an Ethiopian date to a Gregorian date.","title":"ethiopian_to_gregorian(ethiopian_year: int, ethiopian_month: int, ethiopian_day: int) -&gt; tuple[int, int, int]:"},{"location":"baherhasab/#args_2","text":"ethiopian_year (int): The Ethiopian year. ethiopian_month (int): The Ethiopian month. ethiopian_day (int): The Ethiopian day.","title":"Args:"},{"location":"baherhasab/#returns_11","text":"Tuple[int, int, int]: The Gregorian year, month, and day.","title":"Returns:"},{"location":"baherhasab/#example_12","text":"gregorian_year, gregorian_month, gregorian_day = baher_hasab.ethiopian_to_gregorian(2016, 11, 18) print(gregorian_year, gregorian_month, gregorian_day) # Outputs 2024, 7, 25","title":"Example:"},{"location":"baherhasab/#gregorian_to_ethiopiangregorian_year-int-gregorian_month-int-gregorian_day-int-tupleint-int-int","text":"Convert a Gregorian date to an Ethiopian date.","title":"gregorian_to_ethiopian(gregorian_year: int, gregorian_month: int, gregorian_day: int) -&gt; tuple[int, int, int]:"},{"location":"baherhasab/#args_3","text":"gregorian_year (int): The Gregorian year. gregorian_month (int): The Gregorian month. gregorian_day (int): The Gregorian day.","title":"Args:"},{"location":"baherhasab/#returns_12","text":"Tuple[int, int, int]: The Ethiopian year, month, and day.","title":"Returns:"},{"location":"baherhasab/#example_13","text":"ethiopian_year, ethiopian_month, ethiopian_day = baher_hasab.gregorian_to_ethiopian(2024, 7, 25) print(ethiopian_year, ethiopian_month, ethiopian_day) # Outputs 2016, 11, 18","title":"Example:"},{"location":"baherhasab/#attributes","text":"","title":"Attributes"},{"location":"baherhasab/#abiy_kemer","text":"Value: 532 Description: Also known as abiy awde.","title":"abiy_kemer"},{"location":"baherhasab/#awde_mahtot","text":"Value: 76 Description: Also known as mahkelawi awde.","title":"awde_mahtot"},{"location":"baherhasab/#awde_tsehay","text":"Value: 28 Description: Also known as nuhase awde.","title":"awde_tsehay"},{"location":"baherhasab/#awde_abketa","text":"Value: 19","title":"awde_abketa"},{"location":"baherhasab/#old_abketa","text":"Value: 11","title":"old_abketa"},{"location":"baherhasab/#amet_alem","text":"Value: 5500 Description: Years before Christ","title":"amet_alem"},{"location":"baherhasab/#given_year","text":"Value: The given year passed during initialization.","title":"given_year"}]}